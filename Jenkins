pipeline {
    agent any

    stages {
        stage('GIT') {
            steps {
                git branch: 'ghadaaoun',
                url: 'https://github.com/abidhiaf/Projet1_devops.git'
            }
        }

        stage('Clean and Build') {
            steps {
                script {
                    sh "mvn clean package -DskipTests"
                }
            }
        }

        stage('Code Quality Check via SonarQube') {
            steps {
                script {
                    sh "mvn verify sonar:sonar -Dsonar.projectKey=station -Dsonar.projectName='station' -Dsonar.host.url=http://localhost:9000 -Dsonar.login=sqa_0c3b8011d7b6a0487f317265bcc02fb000de2959"
                }
            }
        }

        stage('Unit Tests') {
            steps {
                script {
                    sh "mvn test"
                }
            }
        }


post {
        always {
            cleanWs()
        }
        success {
            emailext(
                subject: "Succès - La pipeline Jenkins",
                body: """
                <html>
                <body>
                    <h1 style="color: green;">Succès de la pipeline Jenkins</h1>
                    <p>La pipeline Jenkins a été exécutée avec succès.</p>
                </body>
                </html>
                """,
                to: "ghada.aoun@esprit.tn",
                mimeType: 'text/html'
            )
        }
        failure {
            emailext(
                subject: "Échec - La pipeline Jenkins",
                body: """
                <html>
                <body>
                    <h1 style="color: red;">Échec de la pipeline Jenkins</h1>
                    <p>La pipeline Jenkins a rencontré des problèmes et a échoué.</p>
                </body>
                </html>
                """,
                to: "ghada.aoun@esprit.tn",
                mimeType: 'text/html'
            )
        }



    }
}
